// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String

  firstname String?
  lastname String?

  isActive Boolean @default(true)
  is_admin Boolean @default(false)
  is_super_user Boolean @default(false)
  bookmarks Bookmark[] // for creating relationships
  category Category[]

  @@map("users")
  
}

model Bookmark {
  id Int @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String?
  link String

  userId Int
  user User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Category{
  // id Int @id @default(autoincrement())
  category_id String @id @default(uuid()) @unique 
  name String
  verified Boolean @default(true)
  date_created DateTime @default(now())
  updatedAt DateTime @updatedAt

  created_by Int?
  user User? @relation(fields: [created_by], references: [id])

  product Product[]
  @@map("categories")

}

model Product{
  id String @id @default(uuid())
  product_title String
  slug String @unique
  sku String
  product_gallery ProductGallery[]
  // product_qty String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_qty Int 
  selling_price Int
  discount_price Int
  description String
  specification String
  verfied Boolean @default(false)
  category_id String
  date_created DateTime @default(now())
  updatedAt DateTime @updatedAt

  category Category @relation(fields: [category_id], references: [category_id])

  @@map("products")
}

model ProductGallery{
  id Int @id @default(autoincrement())
  images String[]
  product_id String
  createdAt DateTime @default(now())

  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade) 

  @@map("productGallery")
}